#include "tree_sitter/runtime.h"
#include <node.h>

using namespace v8;

extern "C" TSLanguage * ts_language_<%= parserName %>();

namespace tree_sitter_<%= parserName %> {

static Handle<Value> New(const Arguments &args) {
  HandleScope scope;
  return scope.Close(Undefined());
}

void InitAll(Handle<Object> exports, Handle<Object> module) {
  Local<FunctionTemplate> tpl = FunctionTemplate::New(New);
  tpl->SetClassName(String::NewSymbol("Language"));
  tpl->InstanceTemplate()->SetInternalFieldCount(1);

  Local<Function> constructor = tpl->GetFunction();
  Local<Object> instance = constructor->NewInstance(0, NULL);
  instance->SetInternalField(0, External::New(ts_language_<%= parserName %>()));

  module->Set(String::NewSymbol("exports"), instance);
}

NODE_MODULE(ts_language_<%= parserName %>_binding, InitAll)

}  // namespace tree_sitter_<%= parserName %>
